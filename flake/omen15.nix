# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/5652-348E";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/fea890b4-cc85-476c-9f53-d988b156d514";
    fsType = "btrfs";
    options = [
      "subvol=@"
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
    ];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/fea890b4-cc85-476c-9f53-d988b156d514";
    fsType = "btrfs";
    options = [
      "subvol=@nix"
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
      "autodefrag"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/fea890b4-cc85-476c-9f53-d988b156d514";
    fsType = "btrfs";
    options = [
      "subvol=@home"
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
    ];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/fea890b4-cc85-476c-9f53-d988b156d514";
    fsType = "btrfs";
    options = [
      "subvol=@log"
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
    ];
  };

  fileSystems."/.snapshot" = {
    device = "/dev/disk/by-uuid/fea890b4-cc85-476c-9f53-d988b156d514";
    fsType = "btrfs";
    options = [
      "subvol=@snapshot"
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
    ];
  };

  fileSystems."/steam-win" = {
    label = "steam-win";
    fsType = "ntfs-3g";
    options = [
      "nofail"
      "users"
      "uid=1000"
      "gid=1000"
      "rw"
      "exec"
      "umask=000"
      "prealloc"
      "noatime"
      "allow_other"
      "async"
      "windows_names"
      "big_writes"
    ]; # ntfs-3g
    #options = ["nofail" "users" "uid=1000" "gid=1000" "rw" "exec" "umask=000" "noatime" "async" ]; #ntfs3
  };

  fileSystems."/steam-linux" = {
    label = "steam-linux";
    fsType = "btrfs";
    options = [
      "rw"
      "relatime"
      "ssd"
      "space_cache=v2"
      "noatime"
      "nodiratime"
      "commit=120"
      "compress=zstd:1"
      "discard=async"
      "autodefrag"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
