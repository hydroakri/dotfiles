export LANG=en_US.UTF-8

# use ssh insteadof https
# git config --global url.ssh://git@github.com/.insteadOf https://github.com/

# history
SAVEHIST=9223372036854775807
HISTFILE=~/.zsh_history
setopt INC_APPEND_HISTORY
export HISTTIMEFORMAT="[%F %T] "
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS

# some personal variables
export PATH="$PATH:/home/$USER/script:/var/lib/flatpak/exports/bin:~/.local/share/flatpak/exports/bin:/home/linuxbrew/.linuxbrew/bin"
export XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/flatpak/exports/share:/home/$USER/.local/share/flatpak/exports/share"
export EDITOR=nvim
alias vi='nvim'
alias suvi='sudo nvim -u ~/.config/nvim/init.lua'
alias ack='ag'
alias zj='zellij'
alias tmux='tmux -u'
alias fzf='fzf --preview "bat --color=always --style=numbers --line-range=:500 {}" '
alias p='proxychains -q'
alias p4='proxychains4 -q'
alias x='env GTK_IM_MODULE=fcitx QT_QPA_PLATFORM=xcb GDK_BACKEND=x11 XDG_SESSION_TYPE=x11 -u=WAYLAND_DISPLAY '

# vim bindkey
bindkey -v

# load plugin
autoload -U compinit
autoload -U promptinit
promptinit
compinit
setopt HIST_IGNORE_DUPS
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true

# plugins
eval "$(starship init zsh)"
eval "$(atuin init zsh)" # an awesome history/implement plugin !
eval "$(zoxide init zsh --cmd cd)"

source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# detect zsh plugin update async
(
    update_repo() {
        local repo_dir="$1"
        local repo_url="$2"

        if [ ! -d "$repo_dir" ]; then
            mkdir -p ~/.zsh
            git clone --depth=1 "$repo_url" "$repo_dir" > /dev/null 2>&1
        else
            git -C "$repo_dir" fetch --all --depth=1 > /dev/null 2>&1
            if git -C "$repo_dir" status | grep -q "Your branch is up to date with"; then
                echo "$(basename "$repo_dir") is ALREADY UP TO DATE" > /dev/null 2>&1
            else
                git -C "$repo_dir" reset --hard origin/master > /dev/null 2>&1
                git -C "$repo_dir" pull > /dev/null 2>&1
            fi
        fi
    }
    update_repo ~/.zsh/zsh-autosuggestions https://github.com/zsh-users/zsh-autosuggestions &
    update_repo ~/.zsh/zsh-syntax-highlighting https://github.com/zsh-users/zsh-syntax-highlighting &
) > /dev/null 2>&1

# if [[ $(ps --no-header --pid=$PPID --format=cmd) != "fish" ]]
# then
#     exec fish
# fi
